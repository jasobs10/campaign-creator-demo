{"version":3,"sources":["assets/images/Info-Icon.png","assets/images/Hyperlocology-Logo.png","assets/images/avatar.jpg","assets/images/Setting-Icon.png","assets/images/Location-Icon.png","assets/images/Targeting-Icon.png","assets/images/map.svg","assets/images/check.svg","app/shared/navbar/navbar.jsx","app/create-campaign/segment-select-container/segment-select-container.jsx","app/create-campaign/month-picker/month-picker.jsx","app/create-campaign/create-campaign.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","noMargin","marginRight","NavBar","props","react_default","a","createElement","className","src","logo","alt","style","defaultAvatar","SegmentSelectContainer","_this","this","segments","map","segment","i","key","onClick","addOrRemoveSegment","selected","check","concat","name","renderSegmentSelects","close","React","Component","MonthPicker","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedYear","selectedMonth","months","display","numeric","selectedDate","splitYearOrDate","split","length","trim","monthName","find","month","Date","getFullYear","state","incrementYear","bind","assertThisInitialized","decrementYear","selectMonth","selectOngoing","handleClick","timePeriod","end","currentYear","currentMonthIdx","getMonth","document","addEventListener","removeEventListener","e","_this2","preventDefault","setState","handleSelect","_this3","_this4","isMonthIndexInvalid","node","contains","target","handleClickOutside","_this5","_this6","ref","renderMonths","CreateCampaign","startMonth","endMonth","budget","landingPage","zipCode","showSegmentSelect","showStartPicker","showEndPicker","updateFormField","removeSegment","toggleSegmentSelect","openMonthPicker","closeMonthPicker","updateStartMonth","updateEndMonth","resetForm","toConsumableArray","index","findIndex","seg","filter","field","defineProperty","currentTarget","value","stateProp","settingsIcon","placeholder","type","onChange","month_picker_month_picker","readOnly","infoIcon","locationIcon","width","targetIcon","position","segment_select_container_segment_select_container","renderSelectedSegments","App","navbar_navbar","create_campaign_create_campaign","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79432226.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Info-Icon.cb679af3.png\";","module.exports = __webpack_public_path__ + \"static/media/Hyperlocology-Logo.9542484b.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar.37d75d8f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Setting-Icon.cbbbb61a.png\";","module.exports = __webpack_public_path__ + \"static/media/Location-Icon.4d5f1004.png\";","module.exports = __webpack_public_path__ + \"static/media/Targeting-Icon.2a869073.png\";","module.exports = __webpack_public_path__ + \"static/media/map.219610f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.65fd041b.svg\";","import React from 'react';\nimport './navbar.scss';\nimport logo from '../../../assets/images/Hyperlocology-Logo.png';\nimport defaultAvatar from '../../../assets/images/avatar.jpg'\n\nconst noMargin = {\n  marginRight: 0\n};\n\nconst NavBar = (props) => (\n  <div className=\"navbar\">\n    <div className=\"left\">\n      <img src={logo} alt=\"logo\"/>\n      <div className=\"nav-element selected\">Campaigns</div>\n      <div className=\"nav-element\" style={noMargin}>Reporting</div>\n    </div>\n\n    <div className=\"right\">\n      <div className=\"user\">\n        <h1>The Harbor East Group at Morgan Stanley</h1>\n        <h2>Sean@harboreastgroup.com</h2>\n      </div>\n      <img src={defaultAvatar} alt=\"avatar\" />\n    </div>\n  </div>\n)\n\nexport default NavBar;","import React from 'react';\nimport './segment-select-container.scss';\nimport check from '../../../assets/images/check.svg'\n\nclass SegmentSelectContainer extends React.Component {\n\n  renderSegmentSelects() {\n    return this.props.segments.map((segment, i) => (\n      <div className=\"segment-select\" key={i} onClick={() => this.props.addOrRemoveSegment(i)}>\n        <div className={`check`}>\n          {segment.selected ? <img src={check} alt=\"check\" /> : null}\n        </div>\n        <div className={`segment-item ${segment.selected ? 'selected' : ''}`}>{segment.name}</div>\n      </div>\n    ));\n  }\n\n  render() {\n\n    return (\n      <div className=\"segment-select-wrapper\">\n        {this.renderSegmentSelects()}\n        \n        <div className=\"done-container\">\n          <button className=\"done\" onClick={this.props.close}>Done</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SegmentSelectContainer;","import React from 'react';\nimport './month-picker.scss';\n\nclass MonthPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    const months = [\n      { display: 'Jan', name: 'January', numeric: '01' },\n      { display: 'Feb', name: 'February', numeric: '02' },\n      { display: 'Mar', name: 'March', numeric: '03' },\n      { display: 'Apr', name: 'April', numeric: '04' },\n      { display: 'May', name: 'May', numeric: '05' },\n      { display: 'June', name: 'June', numeric: '06' },\n      { display: 'July', name: 'July', numeric: '07' },\n      { display: 'Aug', name: 'August', numeric: '08' },\n      { display: 'Sep', name: 'September', numeric: '09' },\n      { display: 'Oct', name: 'October', numeric: '10' },\n      { display: 'Nov', name: 'November', numeric: '11' },\n      { display: 'Dec', name: 'December', numeric: '12' }\n    ];\n\n    let selectedYear;\n    let selectedMonth;\n    if (props.selectedDate && props.selectedDate !== 'No end month') {\n      const splitYearOrDate = props.selectedDate.split(',');\n      if (splitYearOrDate.length > 1) {\n        selectedYear = +splitYearOrDate[1].trim();\n        const monthName = splitYearOrDate[0].trim();\n        selectedMonth = months.find((month => month.name === monthName));\n      } else {\n        selectedYear = +splitYearOrDate[0].trim();\n        selectedMonth = {};\n      }\n    } else {\n      selectedYear = new Date().getFullYear();\n      selectedMonth = {};\n    }\n\n    this.state = {\n      months,\n      selectedYear,\n      selectedMonth\n    }\n\n    this.incrementYear = this.incrementYear.bind(this);\n    this.decrementYear = this.decrementYear.bind(this);\n    this.selectMonth = this.selectMonth.bind(this);\n    this.selectOngoing = this.selectOngoing.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.timePeriod = this.props.end ? 'end' : 'start';\n    this.currentYear = new Date().getFullYear();\n    this.currentMonthIdx = new Date().getMonth();\n  }\n  \n  componentWillMount() {\n    document.addEventListener('mousedown', this.handleClick, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClick, false);\n  }\n\n  incrementYear(e) {\n    e.preventDefault();\n    let selectedYear = this.state.selectedYear;\n    selectedYear++;\n    this.setState({ selectedYear }, () => {\n      this.props.handleSelect(`${this.state.selectedMonth.name ? this.state.selectedMonth.name + ', ' : ''}${this.state.selectedYear}`);\n    });\n  }\n\n  decrementYear(e) {\n    e.preventDefault();\n    let selectedYear = this.state.selectedYear;\n    if (selectedYear > this.currentYear) {\n      selectedYear--;\n      this.setState({ selectedYear }, () => {\n        this.props.handleSelect(`${this.state.selectedMonth.name ? this.state.selectedMonth.name + ', ' : ''}${this.state.selectedYear}`);\n      });\n    }\n  }\n\n  selectMonth(selectedMonth, i) {\n    if (this.isMonthIndexInvalid(i)) {\n      return;\n    }\n    this.setState({ selectedMonth }, () => {\n      this.props.handleSelect(`${selectedMonth.name}, ${this.state.selectedYear}`);\n    });\n  }\n\n  isMonthIndexInvalid(i) {\n    return this.state.selectedYear === this.currentYear && i < this.currentMonthIdx;\n  }\n\n  selectOngoing() {\n    this.props.handleSelect('No end month')\n  }\n\n  handleClick(e) {\n    if (!this.node || this.node.contains(e.target)) {\n      return;\n    }\n\n    this.handleClickOutside();\n  }\n\n  handleClickOutside() {\n    this.props.close(this.timePeriod);\n  }\n\n  renderMonths() {\n    return this.state.months.map((month, i) => (\n      <div key={i} className={`month ${this.state.selectedMonth.name === month.name ? 'selected' : ''} ${this.isMonthIndexInvalid(i) ? 'disabled' : ''}`} onClick={(e) => this.selectMonth(month, i)}><span>{month.display}</span></div>\n    ));\n  }\n\n  render() {\n    return (\n      <div ref={node => this.node = node} className=\"calendar-wrapper\">\n        <div className=\"year-select\">\n          <div className={`triangle left ${this.state.selectedYear === this.currentYear ? 'disabled': ''}`} onClick={this.decrementYear}></div>\n          <div className=\"selected-year\">{this.state.selectedYear}</div>\n          <div className=\"triangle right\" onClick={this.incrementYear}></div>\n        </div>\n\n        { this.props.end ? <div className=\"no-end\" onClick={() => this.selectOngoing()}>\n          Ongoing (no end month)\n        </div> : null }\n\n        <div className=\"months-container\">\n          {this.renderMonths()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MonthPicker;","import React from 'react';\nimport './create-campaign.scss';\nimport settingsIcon from '../../assets/images/Setting-Icon.png';\nimport locationIcon from '../../assets/images/Location-Icon.png';\nimport targetIcon from '../../assets/images/Targeting-Icon.png';\nimport infoIcon from '../../assets/images/Info-Icon.png';\nimport map from '../../assets/images/map.svg';\nimport SegmentSelectContainer from './segment-select-container/segment-select-container';\nimport MonthPicker from './month-picker/month-picker';\n\nclass CreateCampaign extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      startMonth: '',\n      endMonth: '',\n      budget: '',\n      landingPage: '',\n      zipCode: '',\n      segments: [\n        { name: 'Retirement Planning', selected: false },\n        { name: 'Divorce', selected: false },\n        { name: '401k', selected: false },\n        { name: 'Charity', selected: false }\n      ],\n      showSegmentSelect: false,\n      showStartPicker: false,\n      showEndPicker: false\n    }\n\n    this.updateFormField = this.updateFormField.bind(this);\n    this.addOrRemoveSegment = this.addOrRemoveSegment.bind(this);\n    this.removeSegment = this.removeSegment.bind(this);\n    this.toggleSegmentSelect = this.toggleSegmentSelect.bind(this);\n    this.openMonthPicker = this.openMonthPicker.bind(this);\n    this.closeMonthPicker = this.closeMonthPicker.bind(this);\n    this.updateStartMonth = this.updateStartMonth.bind(this);\n    this.updateEndMonth = this.updateEndMonth.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  // make cancel reset everything\n  resetForm() {\n    this.setState({\n      name: '',\n      startMonth: '',\n      endMonth: '',\n      budget: '',\n      landingPage: '',\n      zipCode: '',\n      segments: [\n        { name: 'Retirement Planning', selected: false },\n        { name: 'Divorce', selected: false },\n        { name: '401k', selected: false },\n        { name: 'Charity', selected: false }\n      ],\n      showSegmentSelect: false,\n      showStartPicker: false,\n      showEndPicker: false\n    });\n  }\n\n  toggleSegmentSelect(e) {\n    e.preventDefault();\n    this.setState({showSegmentSelect: !this.state.showSegmentSelect});\n  }\n\n  removeSegment(segment) {\n    const segments = [...this.state.segments];\n    const index = segments.findIndex((seg) => seg.name === segment.name);\n    if (segments[index]) {\n      segments[index].selected = false;\n      this.setState({ segments });\n    }\n  }\n\n  addOrRemoveSegment(index) {\n    const segments = [...this.state.segments];\n    const segment = segments[index];\n    segment.selected = !segment.selected;\n    this.setState({ segments });\n  }\n\n  renderSelectedSegments() {\n    return this.state.segments\n      .filter(segment => segment.selected)\n      .map((segment, i) => (\n        <div key={i} className=\"segment\" onClick={(e) => this.removeSegment(segment)}>{segment.name}</div>\n      ));\n  }\n\n  updateFormField(field) {\n    return (e) => this.setState({[field]: e.currentTarget.value});\n  }\n\n  openMonthPicker(timePeriod) {\n    const stateProp = timePeriod === 'start' ? 'showStartPicker' : 'showEndPicker';\n\n    this.setState({\n      [stateProp]: true\n    });   \n  }\n\n  closeMonthPicker(timePeriod) {\n    const stateProp = timePeriod === 'start' ? 'showStartPicker' : 'showEndPicker';\n\n    this.setState({\n      [stateProp]: false\n    });   \n  }\n  \n  updateStartMonth(startMonth) {\n    this.setState({ startMonth });\n  }\n\n  updateEndMonth(endMonth) {\n    this.setState({ endMonth })\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"page-wrapper\">\n          <div className=\"campaign-container\">\n            <header className=\"text\">\n              <h1>Create Campaign</h1>\n              <span onClick={this.resetForm}>Cancel</span>\n            </header>\n\n            <section>\n              <header>\n                <img src={settingsIcon} alt=\"settings\" />\n                <h2>Settings</h2>\n              </header>\n\n              <div>\n                <label>\n                  Campaign Name\n                  <input placeholder={'Example: The Harbor East Group Display'} className=\"campaign-name\" type=\"text\" onChange={this.updateFormField('name')} value={this.state.name} />\n                </label>\n              </div>\n\n              <div className=\"month-controls\">\n                <label>\n                  Start month\n                  {this.state.showStartPicker ? <MonthPicker selectedDate={this.state.startMonth} handleSelect={this.updateStartMonth} close={this.closeMonthPicker}/> : null}\n                  <input className=\"month-picker first\" type=\"text\" onClick={(e) => this.openMonthPicker('start')} value={this.state.startMonth} readOnly={true} />\n                </label>\n\n                <label>\n                  End month\n                  {this.state.showEndPicker ? <MonthPicker selectedDate={this.state.endMonth} handleSelect={this.updateEndMonth} close={this.closeMonthPicker} end={true} /> : null}\n                  <input className=\"month-picker\" type=\"text\" onClick={(e) => this.openMonthPicker('end')} value={this.state.endMonth} readOnly={true} />\n                </label>              \n              </div>\n            \n              <div className=\"budget-controls\">\n                Budget\n                <div className=\"radio-container\">\n                  <label>\n                    <input className=\"radio\" type=\"radio\" name=\"budget\" value=\"500\"/>\n                    $ 500 / month\n                  </label>\n\n                  <label>\n                    <input className=\"radio\" type=\"radio\" name=\"budget\" value=\"500\"/>\n                    $ 800 / month\n                  </label>\n\n                  <label>\n                    <input className=\"radio\" type=\"radio\" name=\"budget\" value=\"500\"/>\n                    $ 1000 / month\n                  </label>                                \n                </div>\n              </div>\n\n              <div>\n                <label>\n                  Landing Page for Ad Traffic\n                  <input placeholder={'Example: harboreastgroup.com/contact'} onChange={this.updateFormField('landingPage')}  className=\"campaign-name\" type=\"text\" value={this.state.landingPage} />\n                </label>\n              </div>            \n\n              <aside className=\"instructions\">\n                <div className=\"instruction-item first\">\n                  <img src={infoIcon} alt=\"info\" />\n                  <div className=\"info-text\">\n                    Your campaign will begin on the first of the start month and will run through the end \n                    month. Your campaign must run for at least 6 months. If your campaign has no end \n                    month, it will be ongoing. You can terminate your campaign any time. \n                  </div>\n                </div>\n\n                <div className=\"instruction-item\">\n                  <img src={infoIcon} alt=\"info\" />\n                  <div className=\"info-text\">\n                    These budget options have been selected to optimize performance at different levels\n                    of spend. The higher the monthly budget, the faster campaigns will be optimized for \n                    performance, increasing clicks.\n                  </div>\n                </div>\n              </aside>\n            </section>\n\n            <section>\n              <header>\n                <img src={locationIcon} alt=\"location\" />\n                <h2>Location</h2>\n              </header>\n              <div>\n                <label>\n                  Zip Code\n                  <div className=\"zip\">\n                    <input style={{width: '140px'}} type=\"number\" onChange={this.updateFormField('zipCode')} value={this.state.zipCode} />\n                    <div className=\"instruction-item\">\n                      <img src={infoIcon} alt=\"info\" />\n                      <div className=\"info-text\">\n                        Morgan Stanley has determined the designated marketing areas to optimize reach and target potential clients most likely to engage with your ads based on your zip code\n                      </div>\n                    </div>\n                  </div>\n                </label>\n              </div>\n\n              <div className=\"region-container\">\n                <img src={map} alt=\"map\"/>\n                <div className=\"regions\">\n                  Regions included in the designated marketing area:\n                  <ul>\n                    <li>DMA 1</li>\n                    <li>DMA 2</li>\n                    <li>DMA 3</li>\n                    <li>DMA 4</li>\n                    <li>DMA 5</li>\n                  </ul>\n                </div>\n              </div>\n            </section>\n\n            <section>\n              <header>\n                <img src={targetIcon} alt=\"target\" />\n                <h2>Targeting</h2>\n              </header>\n\n              <div className=\"field include-message\">\n                <div style={{position: 'relative'}}>\n                  Audience Segments\n                  <button onClick={(e) => this.toggleSegmentSelect(e)} className=\"add-remove\">\n                    <span>+ add / remove</span>\n                    <div className={`triangle ${!this.state.showSegmentSelect ? 'flip' : ''}`}></div>\n                  </button>\n                  { this.state.showSegmentSelect ? <SegmentSelectContainer addOrRemoveSegment={this.addOrRemoveSegment} close={this.toggleSegmentSelect} segments={this.state.segments}/> : null}\n                </div>\n\n                <div className=\"instruction-item\">\n                  <img src={infoIcon} alt=\"info\" />\n                  <div className=\"info-text\">\n                    Morgan Stanley has determined the designated marketing areas to optimize reach and target potential clients most likely to engage with your ads based on your zip code\n                  </div>\n                </div>              \n              </div>\n\n              <div className=\"field\">\n                Included\n                <div className=\"segments-container\">\n                  {this.renderSelectedSegments()}\n                </div>\n              </div>\n            </section>\n\n            <section>\n              <header>\n                <h2>Creative</h2>\n              </header>\n            </section>\n          </div>\n        </form>\n\n        <div className=\"campaign-footer\">\n          <div className=\"left\">\n            <span className=\"text\">back to campaigns</span>\n          </div>\n          <div className=\"right\">\n            <button className=\"cancel\" onClick={this.resetForm}>Cancel</button>\n            <button className=\"save\" onClick={this.resetForm}>Save Campaign</button>\n          </div>\n        </div>        \n      </div>\n    );\n  }\n}\n\nexport default CreateCampaign;","import React from 'react';\n\nimport './App.css';\nimport NavBar from './app/shared/navbar/navbar';\nimport CreateCampaign from './app/create-campaign/create-campaign';\n\nconst App = () => {\n  return (\n    <div>\n      <NavBar />\n      <CreateCampaign />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}